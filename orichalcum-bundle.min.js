// author: bryku
// date: 2023-may-5
// url: https://github.com/bryku/Orichalcum-1
let o = function(element_type, element_attr, element_text){let type = element_type;let attr = arguments.length == 3 ? element_attr : {};let text = arguments.length == 2 ? element_attr : element_text || '';let e = document.createElement(type);e.innerText = typeof text != 'object' ? text : '';for(let prop in attr){if(prop == 'class'){e.className += attr.class}else if(prop == 'styles'){for(let style in attr.styles){e.style[style] = attr.styles[style]}}else if(o.plugins[prop]){e = o.plugins[prop](e, attr[prop])}else{e[prop] = attr[prop]}}if(typeof text == 'object' && Array.isArray(text)){e.append(...text)}else if(typeof text == 'object' && text.nodeName){e.append(text)}return e}
o.version = '1.0.0';
o.plugins = {href:function(e, v){e.href = v;if(v.indexOf('://') == -1){e.addEventListener('click',(event)=>{event.preventDefault();o.route(event.target.closest('a').getAttribute('href'))})}return e},fetch:function(element, values){if(!values.options){values.options = {method: 'GET'}}if(!values.options.credentials){values.options.credentials = 'include'}if(!values.type){values.type = 'json'}values.element = element;values.next = [];o.fetch(values);return element},fetch:function(element, values){if(!values.options){values.options = {method: 'GET'}}if(!values.options.credentials){values.options.credentials = 'include'}if(!values.type){values.type = 'json'}values.element = element;values.next = [];o.fetch(values);return element}}	
o.fetchCallback = function(callback, element, data = false){if(callback){let children = callback(element, data);if(children){children = Array.isArray(children) ? children : [children];element.innerHTML = '';element.append(...children)}}}
o.fetchCacheMax = 9;
o.fetchCache = [];
o.fetchCheck = function(values){let cache = this.fetchCache.find((v)=>{return v.url == values.url});if(cache){return new Promise((res, rej)=>{if(cache.completed){res(v)}else{cache.next.push(values);rej("processing")}})}else{o.fetchCache.push(values);if(o.fetchCache.length > o.fetchCacheMax){o.fetchCache.shift()}return fetch(values.url, values.options).then((res)=>{if(res.status !== 200){throw new Error("Connection Error")}if(values.type == 'json'){return res.json()}else{return res.text()}})}}
o.fetch = function(values){o.fetchCallback(values.start, values.element);o.fetchCheck(values).then((data)=>{o.fetchCallback(values.complete, values.element, data);o.fetchCache = o.fetchCache.map((v)=>{if(v.url == values.url){v.completed = true;v.data = data}return v});if(values.next.length > 0){let nextFetch = values.next.shift();nextFetch.next = values.next;o.fetch(nextFetch)}}).catch((err)=>{if(err.message != 'processing'){o.fetchCallback(values.error, values.element)}}).finally(()=>{o.fetchCallback(values.finally, values.element)})}
o.route = function(url = '/', body, element = o.routeElement){let urlArray = url.split('?');let r = {url: o.routeUrl = url,element: element,title:(title)=>{document.title = title;history.replaceState(history.state, title, location.pathname+location.search)},parameters:{},get:{},redirect:o.route,body:body,};for(let route in o.routes){let uDirectories = urlArray[0].split('/');let rDirectories = route.split('/');let match = rDirectories.every((_,i)=>{if(uDirectories[i] == rDirectories[i]){return true}else if(uDirectories[i] && rDirectories[i] == '*'){return true}else if(uDirectories[i] && rDirectories[i].startsWith(':')){r.parameters[rDirectories[i].slice(1)] = uDirectories[i];return true}return false});if(match){if(urlArray[1]){r.get = urlArray[1].split('?').reduce((o,v,i)=>{let index = v.indexOf('=');if(index > -1){o[v.slice(0,index)] = v.slice(index + 1)}return o},{})}history.pushState(history.state, document.title, url);let elements = o.routes[route](r);elements = Array.isArray(elements) ? elements : [elements];r.element.innerHTML = '';r.element.append(...elements);return true}else if(o.routes['error']){o.routes['error'](r)}}}
o.router = function(element, routes, interval = 100){o.routes = routes;o.routeElement = element;o.routeUrl = '';o.routeInterval = setInterval(()=>{if(o.routeUrl != location.pathname + location.search){o.route(location.pathname + location.search)}},interval)}
