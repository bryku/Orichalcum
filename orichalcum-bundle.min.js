// author: drburnett
// date: 2023-05-01
// github: https://github.com/bryku/Orichalcum-1
let o = function(type, attr, text){if(arguments.length < 3){text = attr || '';attr = {}}let e = document.createElement(type);for(let p in attr){if(o.plugins[p]){e = o.plugins[p](e,attr[p])}else{e[p] = attr[p]}}if(typeof text == 'string'){e.append(document.createTextNode(text))}else if(Array.isArray(text)){e.append(...text)}else{e.append(text)}return e}
o.version = '1.0.0';
o.plugins = {
class: (e,v)=>{e.className = v;return e},
styles: (e,v)=>{for(let s in v){e.style[s] = v[s]}return e},
href: (e, v)=>{e.href = v;if(v.indexOf('://') == -1){e.addEventListener('click',(event)=>{event.preventDefault();o.route(event.target.closest('[href]').href)})}return e},
};
o.title = (title = '')=>{document.title = title;history.replaceState(history.state,title,location.pathname+location.search)}
o.route = function(url = '/', body = false){let r = {element: o.routeElement,url: url,path: url.match(/\/(.*?)(\?|\#|$)/gm)[0].replace(/\?|\#/gm,''),hash: (url.match(/\#(.*?)$/) || [false])[0],get:(url.match(/\?(.*?)(\#|$)/) || [''])[0].replace(/\?|#/gm,'').split('&').filter(v => v.length > 0).reduce((o,v)=>{let i = v.indexOf('=');o[v.slice(0,i)] = v.slice(i+1);return o},{}),parameters: {},body: body};let route = Object.keys(o.routes).find((route)=>{let uDir = r.path.split('/');let rDir = route.split('/');return rDir.every((_,i)=>{if(uDir[i] == rDir[i]){return true}else if(uDir[i] == rDir[i] == '*'){return true}else if(uDir[i] && rDir[i][0] == ':'){r.parameters[rDir[i].slice(1)] = uDir[i];return true}return false})}) || '/error';this.routeUrl = url;history.pushState(history.state, document.title, url);r.element.innerHTML = '';r.element.append(...[o.routes[route](r)].flat(1));if(r.hash){let h = document.querySelector(r.hash);if(h){h.scrollIntoView({behavior:"smooth",block:"start"})}}return true}
o.router = function(element, routes, interval = 100){o.routes = routes;o.routeElement = element;o.routeUrl = '';o.routeInterval = setInterval(()=>{if(o.routeUrl != location.pathname + location.search + location.hash){o.route(location.pathname + location.search + location.hash)}},interval)}
o.request = (element)=>{return {element:element,append:function(children){this.element.innerHTML = '';this.element.append(...[children].flat(1))},fetches:[],load:function(callback){this.append(callback(this.element));return this},fetch:function(url,options={method:'GET'},type='json'){this.fetches.push(fetch(url).then((res)=>{if(res.status != 200){throw new Error(res.status)}return res[type]()}));return this},callbacks:{},status:function(code,callback){this.callbacks[code]=callback;return this},error:function(callback,e=this.element,a=this.append){Promise.all(this.fetches).then((data)=>{this.append(this.callbacks['200'](data, this.element))}).catch((err)=>{if(this.callbacks[err.message]){this.append(this.callbacks[err.message](err, this.element))}else{this.append(callback(err, this.element))}})},}}
